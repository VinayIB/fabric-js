// Generated by CoffeeScript 1.7.1



$(".buttons .edit").click(function() {
  $(this).addClass("active");
  $(".buttons a").not(this).removeClass("active");
  app.v.isDrawingMode = true;
  app.v.isGrabMode = false;
  return false;
});

$(".buttons .pencil").click(function() {
  $(this).addClass("active");
  $(".buttons a").not(this).removeClass("active");
  
   
  app.v.isGrabMode = false;
  app.b.selectable = true;

  return false;
});

$(".buttons .grab").click(function() {

  $(this).addClass("active");
  $(".buttons a").not(this).removeClass("active");
  app.v.isDrawingMode = false;
  // app.v.isGrabMode = true;
  // app.b.isGrabMode = false;
  // app.b.selectable = false;
  app.v.renderAll();
  return false;
});
// $(".buttons .zoom-in").click(function() {
//   app.v.setZoom(app.v.viewport.zoom * 1.1);
//   return false;
// });

$(".buttons .orientation").click(function() {
  app.b.set('angle' , 180);
  // app.b.center();
  app.v.renderAll();
  return false;
});

// $(".buttons .zoom-out").click(function() {
//   app.v.setZoom(app.v.viewport.zoom / 1.1);
//   return false;
// });

$(".buttons .eraser").click(function() {
  app.clearAllObjects();
  return false;
});

$(".buttons .eraser-specific").click(function() {
  // app.clearSelectedObj();
  resetZoom();
  return false;
});


$(".buttons .apply").click(function() {
  var height, width;
  width = parseInt($("#width-obj").val());
  height = parseInt($("#height-obj").val());
  app.b.setHeight(height);
  app.b.setWidth(width);
  app.b.center();

  return app.v.renderAll();
});

$("#height-obj").on("input", function(e) {
  var height, width;
  width = parseInt($("#width-obj").val());
  height = parseInt($("#height-obj").val());
  app.b.setHeight(height);
  app.b.setWidth(width);
  app.b.center();

  return app.v.renderAll();
});

$("#width-obj").on("input", function(e) {
  var height, width;
  width = parseInt($("#width-obj").val());
  height = parseInt($("#height-obj").val());
  app.b.setHeight(height);
  app.b.setWidth(width);
  app.b.center();
  return app.v.renderAll();
});

$("#menu-close").click(function(e) {
  e.preventDefault();
  return $("#sidebar-wrapper").toggleClass("active");
});

$("#menu-toggle").click(function(e) {
  e.preventDefault();
  return $("#sidebar-wrapper").toggleClass("active");
});

app.v.on('after:render', function() {
  return this.calcOffset();
});

// globscale = 1; // 100%

function displaywheel(e){
  var evt = window.event || e
  var delta = evt.detail? evt.detail*(-120) : evt.wheelDelta
  if (delta >= 120)
  {
    zoomIn();
  } // zoom-in
  if (delta <= -120){
    zoomOut();
  }

}

var canvasScale = 1;
var SCALE_FACTOR = 1.02;

function zoomIn() {
    // TODO limit the max canvas zoom in
    canvasScale = canvasScale * SCALE_FACTOR;
    var objects = app.v.getObjects();
    for (var i in objects) {
        var scaleX = objects[i].scaleX;
        var scaleY = objects[i].scaleY;
        var left = objects[i].left;
        var top = objects[i].top;
        
        var tempScaleX = scaleX * SCALE_FACTOR;
        var tempScaleY = scaleY * SCALE_FACTOR;
        var tempLeft = left * SCALE_FACTOR;
        var tempTop = top * SCALE_FACTOR;
        
        objects[i].scaleX = tempScaleX;
        objects[i].scaleY = tempScaleY;
        objects[i].left = tempLeft;
        objects[i].top = tempTop;
        
        objects[i].setCoords();
    }
    
    app.v.renderAll();
}

// Zoom Out
function zoomOut() {
    // TODO limit max cavas zoom out
    
    canvasScale = canvasScale / SCALE_FACTOR;
    
    var objects = app.v.getObjects();
    for (var i in objects) {
        var scaleX = objects[i].scaleX;
        var scaleY = objects[i].scaleY;
        var left = objects[i].left;
        var top = objects[i].top;
    
        var tempScaleX = scaleX * (1 / SCALE_FACTOR);
        var tempScaleY = scaleY * (1 / SCALE_FACTOR);
        var tempLeft = left * (1 / SCALE_FACTOR);
        var tempTop = top * (1 / SCALE_FACTOR);

        objects[i].scaleX = tempScaleX;
        objects[i].scaleY = tempScaleY;
        objects[i].left = tempLeft;
        objects[i].top = tempTop;

        objects[i].setCoords();
    }
    
    app.v.renderAll();        
}

// Reset Zoom
function resetZoom() {
    
    var objects = app.v.getObjects();
    for (var i in objects) {
        var scaleX = objects[i].scaleX;
        var scaleY = objects[i].scaleY;
        var left = objects[i].left;
        var top = objects[i].top;
    
        var tempScaleX = scaleX * (1 / canvasScale);
        var tempScaleY = scaleY * (1 / canvasScale);
        var tempLeft = left * (1 / canvasScale);
        var tempTop = top * (1 / canvasScale);

        objects[i].scaleX = tempScaleX;
        objects[i].scaleY = tempScaleY;
        objects[i].left = tempLeft;
        objects[i].top = tempTop;

        objects[i].setCoords();
    }
        
    app.v.renderAll();
    
    canvasScale = 1;
}

var mousewheelevt = (/Firefox/i.test(navigator.userAgent))? "DOMMouseScroll" : "mousewheel";
if (document.attachEvent) { $(document).bind("on"+mousewheelevt, displaywheel); } 
else if (document.addEventListener){ document.addEventListener(mousewheelevt, displaywheel, false); }

$("#width-obj").val(app.blackBoardDimension.height);
$("#height-obj").val(app.blackBoardDimension.width); 